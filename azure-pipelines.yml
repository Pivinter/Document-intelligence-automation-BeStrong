trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-22.04'

variables:
  - name: workingDirectory
    value: 'terraform'

stages:
  - stage: Dev
    displayName: "Deploy to Dev"
    condition: or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Reason'], 'Manual'))
    jobs:
      - job: TerraformDev
        displayName: "Terraform Apply to Dev"
        steps:
          - checkout: self

          - task: DownloadSecureFile@1
            name: downloadTfvars
            inputs:
              secureFile: 'dev.tfvars'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'BeStrong-AI'
              backendAzureRmResourceGroupName: 'BeStrong-AI'
              backendAzureRmStorageAccountName: 'tfstatebestrong32466'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'dev.tfstate'
              workingDirectory: '$(workingDirectory)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(workingDirectory)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(workingDirectory)'
              environmentServiceNameAzureRM: 'BeStrong-AI'
              commandOptions: '-var-file=$(downloadTfvars.secureFilePath)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(workingDirectory)'
              environmentServiceNameAzureRM: 'BeStrong-AI'
              commandOptions: '-var-file=$(downloadTfvars.secureFilePath) -auto-approve'

  - stage: Approval
    displayName: "Manual Approval to Prod"
    dependsOn: Dev
    condition: or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Reason'], 'Manual'))
    jobs:
      - deployment: WaitForApproval
        displayName: 'Wait for manual approval'
        environment: 'prod-approval-env'   # Створи це environment в Azure DevOps
        strategy:
          runOnce:
            deploy:
              steps:
                - script: echo "Waiting for manual approval..."

  - stage: Prod
    displayName: "Deploy to Prod"
    dependsOn: Approval
    condition: or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'Manual'))
    jobs:
      - job: TerraformProd
        displayName: "Terraform Apply to Prod"
        steps:
          - checkout: self

          - task: DownloadSecureFile@1
            name: downloadTfvars
            inputs:
              secureFile: 'prod.tfvars'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'BeStrong-AI'
              backendAzureRmResourceGroupName: 'BeStrong-AI'
              backendAzureRmStorageAccountName: 'tfstatebestrong32466'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'prod.tfstate'
              workingDirectory: '$(workingDirectory)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Validate'
            inputs:
              provider: 'azurerm'
              command: 'validate'
              workingDirectory: '$(workingDirectory)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(workingDirectory)'
              environmentServiceNameAzureRM: 'BeStrong-AI'
              commandOptions: '-var-file=$(downloadTfvars.secureFilePath)'

          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(workingDirectory)'
              environmentServiceNameAzureRM: 'BeStrong-AI'
              commandOptions: '-var-file=$(downloadTfvars.secureFilePath) -auto-approve'
